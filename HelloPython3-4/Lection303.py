# Функция filter() применяет указанную функцию к каждому элементу
# итерируемого объекта и возвращает итератор с теми объектами,
# для которых функция вернула True. так же НЕЛЬЗЯ ПРОЙТИСЬ ДВАЖДЫ

list1 = [i for i in range(0, 11)]
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# функция filter( первый аргумет lambda(УСЛОВИЕ True), второй аргумент список )
res = list(filter(lambda x: x % 2 == 0, list1))

print(res)

# filter() похож с map(), отличае filter() фильтрует через условие (True\False)
# а map() может делать алгебраические операции с элементами

# Функция zip() применяется к набору итерируемых объектов и возвращает
# итератор с кортежами из элементов входных данных.
# ВНИМАНИЕ: кол-во элементов в результате равно минимальнму кол-ву элементов входного набора!

users = ['userA', 'userB', 'userC', 'userD', 'userE']
num = [1, 2, 3, 4, 5]
salary = [200, 500, 700]
sort = list(zip(users, num, salary))
# обрати внимание результат выборки будет по минимальному размеру вх.данных
# результат [('userA', 1, 200), ('userB', 2, 500)]
print(sort)

# функция enumetate() нумерует список по индексам
test = list(enumerate(users))
print(test)
# результат[(0, 'userA'), (1, 'userB'), (2, 'userC'), (3, 'userD'), (4, 'userE')]