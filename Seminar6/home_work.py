""" 
 """

""" 1 Была задача во втором семинаре: Для натурального n создать список значениий, 
состоящий из элементов последовательности 3n + 1.
*Пример:*   
Для n = [ 4, 7, 10, 13, 16, 19 ] 
=> мы ее решали с помощью цикла for 
теперь можем вывести последовательность используя list comprehension"""

print('последовательность 3n + 1 для n =',[3*i+1 for i in range(1,7)])



""" 2 Задайте список из нескольких чисел.
Напишите программу, которая найдёт сумму нечётных элементов списка,"""
# [1, 2, 3, 4, 5, 6, 7, 8, 9]
print('суммма = ', sum([i for i in range(1,10) if i%2!=0]))



#3 в задаче требуется вывести четное число списка и его квадрат.
list1 = [1, 2, 3, 5, 8, 15, 23, 38]
result = list((i, i*i) for i in list1 if i % 2 == 0)
print(result) # [(2, 4), (8, 64), (38, 1444)]


#4 (задача с лекции) задача ввести числа в консоль через пробел, получить список и вывесли его на экран.
list_numbers = list(map(int,input('введите числа через пробел: ').split()))
print(list_numbers) # все будет в списке


# 5 (задача с лекции) задать список с помощью list comprehension
# с помощью функции filter отфильтровать только четные числа.
list1 = [i for i in range(1, 11)]
# [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
res = list(filter(lambda x: x % 2 == 0, list1))
print(res) # [2, 4, 6, 8, 10]

# 6 (задача с лекции) даны 2 списка Фамилии и ЗП ,
#  применив zip() функцию к набору итерируемых объектов вернуть
# итератор с кортежами из элементов входных данных.
users = ['Иванов', 'Петров', 'Сидоров', 'Попов']
salary = [200, 500, 700, 800]
sort = list(zip(users, salary))
print(sort)   # [('Иванов', 200), ('Петров', 500), ('Сидоров', 700), ('Попов', 800)]

# 7 (задача с лекции)проверить рабботу функции enumerate() 
numerate = list(enumerate(users, 1)) # аргумент 1(отсчет с единицы), по умолчанию с отсчет нуля.
print(numerate) # [(1, 'Иванов'), (2, 'Петров'), (3, 'Сидоров'), (4, 'Попов')]

